How to use

(1) Some prerequisites
	a. Start a proxy will help anonymize your visit
	b. Start redis server on port 6379 (standard)
		D:\Program Files\Redis\redis-server.exe as administrator 


(2) Scrap the images and corresponding info with following command
	a. python scrapAmazon.py
	b. change first the param url in the script itself
	c. clear the rawImages directory
	d. image path, AMZ ref and title will be pushed in the redis pipeline, extracted later and stored in the DB by the classifier
	e. check that all images created in raw directory are really images --> sometimes a blob is saved (len>0)

(3) Run the classifier to sort the watches from the other stuff
	a. Make sure the directories are correct (hardcoded in script)
	b. Run automatedClassification.py script
	c. Watches will be stored in the \watches directory
	d. Others will be stored in the \notwatches directory
	e. Display the \notwatches directory per « grandes icones » and cut/paste the missed watches in the \dataset and \watches directory
	f. Rename the pasted image
	g. Do the same with the \watches directory
	h. The details of the watches are stored in images.csv file in the \watches directory	


<<FOLLOWING STEPS ARE DEPRECATED AND REPLACED BY BOVW ALGORITHM>>
(4) Run the indexer to create the indexWatches.csv that will index the newly added watches
	a. Erase or archive the previous indexCatalog.csv
	b. python indexWatchesCatalog.py --catalog watches --index indexWatches.csv
		i. –catalog = path where the watches are found (watches)
		ii. –index = index files name (indexWatches.csv) MUST be a csv file
(5) Take a picture of your watch and upload it to the \imagesWatches directory

(6) Run the searcher to match your watch with 10 closest matches
	a. python searchMywatch.py --index indexWatches.csv --catalog watches --query "imagesWatches/ice.jpg"
